Ext.namespace("Zarafa.plugins.contactimporter");Zarafa.plugins.contactimporter.ABOUT='<p>Copyright (C) 2012-2013  Christoph Haas &lt;christoph.h@sprinternet.at&gt;</p><p>This program is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.</p><p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.</p><p>You should have received a copy of the GNU Lesser General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</p><hr /><p>The contactimporter plugin contains the following third-party components:</p><h1>vCard-parser</h1><p>Copyright (C) 2012 Nuovo</p><p>Licensed under the MIT License.</p><p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>';
Ext.namespace("Zarafa.plugins.contactimporter");
Zarafa.plugins.contactimporter.ImportPlugin=Ext.extend(Zarafa.core.Plugin,{constructor:function(a){a=a||{};Zarafa.plugins.contactimporter.ImportPlugin.superclass.constructor.call(this,a)},initPlugin:function(){Zarafa.plugins.contactimporter.ImportPlugin.superclass.initPlugin.apply(this,arguments);Zarafa.core.data.SharedComponentType.addProperty("plugins.contactimporter.dialogs.importcontacts");this.registerInsertionPoint("common.contextmenu.attachment.actions",this.createAttachmentImportButton);this.registerInsertionPoint("navigation.south",
this.createImportButton,this)},createImportButton:function(){var a={xtype:"button",id:"importcontactsbutton",text:_("Import Contacts"),iconCls:"icon_contactimporter_button",navigationContext:container.getContextByName("contact"),handler:this.onImportButtonClick,scope:this};if(container.getSettingsModel().get("zarafa/v1/plugins/contactimporter/enable_export"))a.text=_("Import/Export Contacts");return a},createAttachmentImportButton:function(a,c){return{text:_("Import Contacts"),handler:this.getAttachmentFileName.createDelegate(this,
[c,this.gotAttachmentFileName]),scope:this,iconCls:"icon_contactimporter_button",beforeShow:function(d,b){var e=b.data.name.split(".").pop().toLowerCase();b.data.filetype=="text/vcard"||e=="vcf"||e=="vcard"?d.setDisabled(false):d.setDisabled(true)}}},gotAttachmentFileName:function(a){a.status==true?Zarafa.core.data.UIFactory.openLayerComponent(Zarafa.core.data.SharedComponentType["plugins.contactimporter.dialogs.importcontacts"],undefined,{manager:Ext.WindowMgr,filename:a.tmpname}):Zarafa.common.dialogs.MessageBox.show({title:_("Error"),
msg:_(a.message),icon:Zarafa.common.dialogs.MessageBox.ERROR,buttons:Zarafa.common.dialogs.MessageBox.OK})},getAttachmentFileName:function(a,c){Zarafa.common.dialogs.MessageBox.show({title:"Please wait",msg:"Loading attachment...",progressText:"Initializing...",width:300,progress:true,closable:false});for(var d=function(h){return function(){h==100?Zarafa.common.dialogs.MessageBox.hide():Zarafa.common.dialogs.MessageBox.updateProgress(h/100,Math.round(h)+"% loaded")}},b=1;b<101;b++)setTimeout(d(b),
20*b);var e=a.records,g=e.store;d=g.getParentRecord().get("store_entryid");b=g.getAttachmentParentRecordEntryId();var f=Array(1);f[0]=e.get("attach_num")!=-1?e.get("attach_num"):e.get("tmpname");g=g.getId();e=e.data.name;var i=new Zarafa.plugins.contactimporter.data.ResponseHandler({successCallback:c});container.getRequest().singleRequest("contactmodule","importattachment",{entryid:b,store:d,attachNum:f,dialog_attachments:g,filename:e},i)},onImportButtonClick:function(){Ext.getCmp("importcontactsbutton").disable();
Zarafa.core.data.UIFactory.openLayerComponent(Zarafa.core.data.SharedComponentType["plugins.contactimporter.dialogs.importcontacts"],undefined,{manager:Ext.WindowMgr})},bidSharedComponent:function(a){var c=-1;switch(a){case Zarafa.core.data.SharedComponentType["plugins.contactimporter.dialogs.importcontacts"]:c=2;break}return c},getSharedComponent:function(a){var c;switch(a){case Zarafa.core.data.SharedComponentType["plugins.contactimporter.dialogs.importcontacts"]:c=Zarafa.plugins.contactimporter.dialogs.ImportContentPanel;
break}return c}});Zarafa.onReady(function(){container.registerPlugin(new Zarafa.core.PluginMetaData({name:"contactimporter",displayName:_("Contactimporter Plugin"),about:Zarafa.plugins.contactimporter.ABOUT,pluginConstructor:Zarafa.plugins.contactimporter.ImportPlugin}))});Ext.namespace("Zarafa.plugins.contactimporter.data");
Zarafa.plugins.contactimporter.data.ResponseHandler=Ext.extend(Zarafa.core.data.AbstractResponseHandler,{successCallback:null,doLoad:function(a){this.successCallback(a)},doImport:function(a){this.successCallback(a)},doImportattachment:function(a){this.successCallback(a)},doError:function(a){alert("error response code: "+a.error.info.code)}});Ext.reg("contactimporter.contactresponsehandler",Zarafa.plugins.contactimporter.data.ResponseHandler);Ext.namespace("Zarafa.plugins.contactimporter.dialogs");
Zarafa.plugins.contactimporter.dialogs.ImportContentPanel=Ext.extend(Zarafa.core.ui.ContentPanel,{constructor:function(a){a=a||{};var c=_("Import Contacts");if(container.getSettingsModel().get("zarafa/v1/plugins/contactimporter/enable_export"))c=_("Import/Export Contacts");Ext.applyIf(a,{layout:"fit",title:c,closeOnSave:true,width:620,height:465,items:[{xtype:"contactimporter.importcontactpanel",filename:a.filename}]});Zarafa.plugins.contactimporter.dialogs.ImportContentPanel.superclass.constructor.call(this,
a)}});Ext.reg("contactimporter.contentpanel",Zarafa.plugins.contactimporter.dialogs.ImportContentPanel);Ext.namespace("Zarafa.plugins.contactimporter.dialogs");
Zarafa.plugins.contactimporter.dialogs.ImportPanel=Ext.extend(Ext.Panel,{vcffile:null,store:null,constructor:function(a){a=a||{};if(typeof a.filename!=="undefined")this.vcffile=a.filename;this.store=new Ext.data.ArrayStore({fields:[{name:"display_name"},{name:"given_name"},{name:"surname"},{name:"company_name"},{name:"record"}]});Ext.apply(a,{xtype:"contactimporter.importpanel",ref:"importcontactpanel",layout:{type:"form",align:"stretch"},anchor:"100%",bodyStyle:"background-color: inherit;",defaults:{border:true,
bodyStyle:"background-color: inherit; padding: 3px 0px 3px 0px; border-style: none none solid none;"},items:[this.createSelectBox(),this.initForm(),this.createGrid()],buttons:[this.createSubmitAllButton(),this.createSubmitButton(),this.createCancelButton()],listeners:{afterrender:function(){this.loadMask=new Ext.LoadMask(this.getEl(),{msg:"Loading..."});this.vcffile!=null&&this.parseContacts(this.vcffile)},close:function(){Ext.getCmp("importcontactsbutton").enable()},hide:function(){Ext.getCmp("importcontactsbutton").enable()},
destroy:function(){Ext.getCmp("importcontactsbutton").enable()},scope:this}});Zarafa.plugins.contactimporter.dialogs.ImportPanel.superclass.constructor.call(this,a)},initForm:function(){return{xtype:"form",ref:"addContactFormPanel",layout:"column",fileUpload:true,autoWidth:true,autoHeight:true,border:false,bodyStyle:"padding: 5px;",defaults:{anchor:"95%",border:false,bodyStyle:"padding: 5px;"},items:[this.createUploadField()]}},reloadGridStore:function(a){var c=[];if(a){c=Array(a.contacts.length);
var d=0;for(d=0;d<a.contacts.length;d++)c[d]=Array(a.contacts[d].display_name,a.contacts[d].given_name,a.contacts[d].surname,a.contacts[d].company_name,a.contacts[d])}else return null;this.store.loadData(c,false)},createGrid:function(){return{xtype:"grid",ref:"contactGrid",columnWidth:1,store:this.store,width:"100%",height:300,title:"Select contacts to import",frame:false,viewConfig:{forceFit:true},colModel:new Ext.grid.ColumnModel({defaults:{width:300,sortable:true},columns:[{id:"Displayname",header:"Displayname",
width:350,sortable:true,dataIndex:"display_name"},{header:"Firstname",width:200,sortable:true,dataIndex:"given_name"},{header:"Lastname",width:200,sortable:true,dataIndex:"surname"},{header:"Company",sortable:true,dataIndex:"company_name"}]}),sm:new Ext.grid.RowSelectionModel({multiSelect:true})}},createSelectBox:function(){var a=container.getHierarchyStore().getDefaultFolder("contact"),c=a.getChildren(),d=[],b=0;d.push(Array(a.getDefaultFolderKey(),a.getDisplayName()));for(b=0;b<c.length;b++)d.push(Array(c[b].getDisplayName(),
c[b].getDisplayName(),false));a=container.getHierarchyStore().getPublicStore();if(typeof a!=="undefined")try{var e=a.getDefaultFolder("publicfolders").getChildren();for(b=0;b<e.length;b++)e[b].isContainerClass("IPF.Contact")&&d.push(Array(e[b].getDisplayName(),e[b].getDisplayName()+" [Shared]",true))}catch(g){console.log("Error opening the shared folder...");console.log(g)}return{xtype:"selectbox",ref:"addressbookSelector",editable:false,name:"choosen_addressbook",value:container.getSettingsModel().get("zarafa/v1/plugins/contactimporter/default_addressbook"),
width:100,fieldLabel:"Select an addressbook",store:d,mode:"local",labelSeperator:":",border:false,anchor:"100%",scope:this,allowBlank:false}},createUploadField:function(){return{xtype:"fileuploadfield",ref:"contactfileuploadfield",columnWidth:1,id:"form-file",name:"vcfdata",emptyText:"Select an .vcf addressbook",border:false,anchor:"100%",scope:this,allowBlank:false,listeners:{fileselected:this.onFileSelected,scope:this}}},createSubmitButton:function(){return{xtype:"button",ref:"../submitButton",
disabled:true,width:100,border:false,text:_("Import"),anchor:"100%",handler:this.importCheckedContacts,scope:this,allowBlank:false}},createSubmitAllButton:function(){return{xtype:"button",ref:"../submitAllButton",disabled:true,width:100,border:false,text:_("Import All"),anchor:"100%",handler:this.importAllContacts,scope:this,allowBlank:false}},createCancelButton:function(){return{xtype:"button",width:100,border:false,text:_("Cancel"),anchor:"100%",handler:this.close,scope:this,allowBlank:false}},
onFileSelected:function(a){var c=this.addContactFormPanel.getForm();c.isValid()&&c.submit({waitMsg:"Uploading and parsing contacts...",url:"plugins/contactimporter/php/upload.php",failure:function(d,b){this.submitButton.disable();this.submitAllButton.disable();Zarafa.common.dialogs.MessageBox.show({title:_("Error"),msg:_(b.result.error),icon:Zarafa.common.dialogs.MessageBox.ERROR,buttons:Zarafa.common.dialogs.MessageBox.OK})},success:function(d,b){a.reset();this.vcffile=b.result.vcf_file;this.parseContacts(this.vcffile)},
scope:this})},parseContacts:function(a){this.loadMask.show();var c=new Zarafa.plugins.contactimporter.data.ResponseHandler({successCallback:this.handleParsingResult.createDelegate(this)});container.getRequest().singleRequest("contactmodule","load",{vcf_filepath:a},c)},handleParsingResult:function(a){this.loadMask.hide();if(a.status==true){this.submitButton.enable();this.submitAllButton.enable();this.reloadGridStore(a.parsed)}else{this.submitButton.disable();this.submitAllButton.disable();Zarafa.common.dialogs.MessageBox.show({title:_("Parser Error"),
msg:_(a.message),icon:Zarafa.common.dialogs.MessageBox.ERROR,buttons:Zarafa.common.dialogs.MessageBox.OK})}},close:function(){this.addContactFormPanel.getForm().reset();this.dialog.close()},importCheckedContacts:function(){this.importContacts(this.contactGrid.selModel.getSelections())},importAllContacts:function(){this.contactGrid.selModel.selectAll();this.importContacts(this.contactGrid.selModel.getSelections())},importContacts:function(a){var c=this.addressbookSelector.getValue();if(c==undefined)Zarafa.common.dialogs.MessageBox.show({title:_("Error"),
msg:_("You have to choose an addressbook!"),icon:Zarafa.common.dialogs.MessageBox.ERROR,buttons:Zarafa.common.dialogs.MessageBox.OK});else{var d=true;if(this.contactGrid.selModel.getCount()<1)Zarafa.common.dialogs.MessageBox.show({title:_("Error"),msg:_("You have to choose at least one contact to import!"),icon:Zarafa.common.dialogs.MessageBox.ERROR,buttons:Zarafa.common.dialogs.MessageBox.OK});else{new Zarafa.contact.ContactStore;var b=container.getHierarchyStore().getDefaultFolder("contact"),e=
container.getHierarchyStore().getPublicStore().getDefaultFolder("publicfolders").getChildren();if(c!="contact"){var g=b.getChildren(),f=0;for(f=0;f<e.length;f++)e[f].isContainerClass("IPF.Contact")&&g.push(e[f]);for(f=0;f<g.length;f++)if(g[f].getDisplayName()==c){b=g[f];break}if(b.isDefaultFolder()){Zarafa.common.dialogs.MessageBox.show({title:_("Error"),msg:_("Selected addressbook does not exist!"),icon:Zarafa.common.dialogs.MessageBox.ERROR,buttons:Zarafa.common.dialogs.MessageBox.OK});d=false}}if(d){this.loadMask.show();
var i=[];c="";Ext.each(a,function(h){i.push(h.data.record.internal_fields.contact_uid)},this);c=b.get("store_entryid");a=new Zarafa.plugins.contactimporter.data.ResponseHandler({successCallback:this.importContactsDone.createDelegate(this)});container.getRequest().singleRequest("contactmodule","import",{storeid:b.get("store_entryid"),folderid:b.get("entryid"),uids:i,vcf_filepath:this.vcffile},a)}}}},importContactsDone:function(a){console.log(a);this.loadMask.hide();this.dialog.close();a.status==true?
container.getNotifier().notify("info","Imported","Imported "+a.count+" contacts. Please reload your addressbook!"):Zarafa.common.dialogs.MessageBox.show({title:_("Error"),msg:_("Import failed: ")+a.message,icon:Zarafa.common.dialogs.MessageBox.ERROR,buttons:Zarafa.common.dialogs.MessageBox.OK})}});Ext.reg("contactimporter.importcontactpanel",Zarafa.plugins.contactimporter.dialogs.ImportPanel);
